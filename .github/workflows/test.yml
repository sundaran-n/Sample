name: File Validation Workflow

on:
  workflow_dispatch:
    inputs:
      search-key:
        description: 'Enter the key to search in the text files'
        required: true
        

jobs:
  validate-file:
    runs-on: ubuntu-latest  

    steps:
      
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: Get search key input
        id: inputs
        run: |
          echo "Search key input: ${{ github.event.inputs['search-key'] }}"

      - name: Search directories in the release directory
        id: search_file
        run: |
          release_dir="release"
          search_key="${{ github.event.inputs['search-key'] }}"

          # Loop through each subdirectory (numbered directories) in the release directory
          for dir in "$release_dir"/*; do
            if [ -d "$dir" ]; then
              iteration=$(basename "$dir")

              # Find the text file inside the numbered directory
              text_file=$(find "$dir" -type f -name "*.txt")
              
              if [ -z "$text_file" ]; then
                echo "No .txt file found in directory $dir"
                continue
              fi

              echo "Checking directory: $dir"
              echo "Looking for ITERATION: $iteration in the file"

              # Read the file and check if ITERATION matches the directory name
              iteration_found=""
              while IFS= read -r line; do
                if [[ "$line" == "ITERATION:"* ]]; then
                  file_iteration="${line#ITERATION: }"
                  iteration_found="$file_iteration"
                  break
                fi
              done < "$text_file"

              # If ITERATION matches the directory name, print all key-value pairs from the file
              if [ "$iteration_found" == "$iteration" ]; then
                echo "ITERATION matches the directory name ($iteration). Printing file contents:"
                while IFS= read -r line; do
                  echo "$line"
                done < "$text_file"
              else
                echo "ITERATION in the file does not match the directory name ($iteration). Skipping this file."
              fi
            fi
          done

